name: Inline Script
on:
  workflow_dispatch
jobs:
  first_job:
    runs-on: ubuntu-latest
    outputs:
      owner : ${{ steps.first_job_step2.outputs.owner }}
    steps:
    - name: Checkout code
      id: first_job_step1
      uses: actions/checkout@v2   
    - name: Test Inline to Ext Script
      id: first_job_step2
      run: |        
        TOKEN="${{ secrets.MY_PAT }}"
        BASE_URL: ${{ vars.BASE_URL }}
        REPO_NAME="${{ github.repository }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        ORGOROWNER="${{ needs.first_job.outputs.owner }}"    
        API_URL="$BASE_URL/orgs/$REPO_NAME/secret-scanning/alerts?per_page=100&page=1&state=open"
        echo "Local Variable $API_URL"
        echo "Secret(Token): $TOKEN"
        echo "Env Variable(BASE_URL): $BASE_URL"
        echo "Context data(REPO_NAME): $REPO_NAME"
        echo "Context data(ORG_OR_OWNER): $ORG_OR_OWNER"
        echo "Job Output(ORGOROWNER): $ORGOROWNER"
        SCA_API_RESPONSE=$(curl -s -i -X GET -u "$TOKENT" "$API_URL")
        echo "::set-output name=owner::${ORG_OR_OWNER}"
        echo "Job Output(ORGOROWNER): $ORGOROWNER"
        #echo $SCA_API_RESPONSEh
  second_job:
    runs-on: ubuntu-latest
    needs: [first_job]
    steps:
    - name: Checkout code
      id: second_job_step1
      uses: actions/checkout@v2   
    - name: Test updated Inline to Ext Script
      id: second_job_step2 
      env:
        BASE_URL: ${{ vars.BASE_URL }}
      run: |
        TOKEN="${{ secrets.MY_PAT }}"
        BASE_URL: ${{ vars.BASE_URL }}
        REPO_NAME="${{ github.repository }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        ORGOROWNER="${{ needs.first_job.outputs.owner }}"
        API_URL="$BASE_URL/orgs/$REPO_NAME/secret-scanning/alerts?per_page=100&page=1&state=open"
        echo "Local Variable $API_URL"
        echo "Secret(Token): $TOKEN"
        echo "Env Variable(BASE_URL): $BASE_URL"
        echo "Context data(REPO_NAME): $REPO_NAME"
        echo "Context data(ORG_OR_OWNER): $ORG_OR_OWNER"
        echo "Job Output(ORGOROWNER): $ORGOROWNER"
        SCA_API_RESPONSE=$(curl -s -i -X GET -u "$TOKENT" "$API_URL")
        echo "::set-output name=owner::${ORG_OR_OWNER}"
        echo "Job Output(ORGOROWNER): $ORGOROWNER"
        #echo $SCA_API_RESPONSEh

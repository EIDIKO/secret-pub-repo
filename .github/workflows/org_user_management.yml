name: Check Added Users in Org &  & Create an Issue.
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  create-issue:
    runs-on: ubuntu-latest    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2    
    - name: Extract Deliveries of Newly Added Users in Org &  & Create an Issue.
      id: extract-delivery-create-issue
      env:
        HOOK_ID: ${{ vars.ORG_USER_HOOK_ID }}
      run: |

        TOKEN="${{ secrets.ORG_USER_PAT }}"
        echo "HOOK $HOOK_ID"
        BASE_URL="https://api.github.com"
        API_URL="$BASE_URL/orgs/${{ github.repository_owner }}/hooks/$HOOK_ID/deliveries"
        API_RESPONSE=$(curl -s -i -X GET -u "$TOKEN" "$API_URL")
        HEADERS=$(echo "$API_RESPONSE" | awk -v RS='\r\n\r\n' 'NR==1')
        HTTP_STATUS=$(echo "$HEADERS" | head -n 1 | awk '{print $2}')
        LINK_HEADER=$(echo "$HEADERS" | grep -i "link:" | awk -F': ' '{print $2}')
        REL=$(echo "$LINK_HEADER" | sed -n 's/.*rel="\([^"]*\)".*/\1/p')
        NEXT_URL=$(echo "$LINK_HEADER" | sed -n 's/<\([^>]*\)>;.*/\1/p')
        BODY=$(echo "$API_RESPONSE" | awk -v RS='\r\n\r\n' 'NR==2')
        echo $HTTP_STATUS
        echo $LINK_HEADER
        echo $NEXT_URL
        echo $REL
        echo $HEADERS
        if [ "$HTTP_STATUS" != "200" ]; then
          echo "No deliveries found or error in API response, exiting smoothly"
          echo $BODY
          exit 0
        fi

        echo "Sort the array of JSON objects in ascending order based on the ID field"
        SCA_DELIVERIES=$(echo "$BODY" | jq 'sort_by(.id)')        
        for DELIVERY in $(echo "${BODY}" | jq -r '.[] | @base64'); do
            _jq() {
              echo "${DELIVERY}" | base64 --decode | jq -r "${1}"
            }
            echo "++++++++++++++++++++++++++++++++++"
            DELIVERY_ID=$(_jq '.id')

            echo $DELIVERY_ID
            
            PAYLOAD=$(curl -s -X GET -u "$TOKEN" "$BASE_URL/orgs/${{ github.repository_owner }}/hooks/$HOOK_ID/deliveries/${DELIVERY_ID}")
            
            if [ -z "$PAYLOAD" ]; then
              echo "No payload found or error in API response. Skipping further process for delivery $DELIVERY_ID"
              continue
            fi
            echo "Webhook Payload"
            ACTION=$(echo "$PAYLOAD" | jq -r '.action')
            EVENT=$(echo "$PAYLOAD" | jq -r '.event')

            echo "Webhook Payload's DELIVERYID: $DELIVERY_ID EVENT: $EVENT ACTION: $ACTION"
            
            if [ "$EVENT" != "organization" ]; then
              echo "Event is not 'organization'. Skipping further process for delivery ID: $DELIVERY_ID"
              continue
            fi
            
            if [ "$ACTION" != "member_added" ]; then
              echo "Action is not 'member_added'. Skipping further process for delivery ID: $DELIVERY_ID"
              continue
            fi
            
            CREATED_AT=$(echo "$PAYLOAD" | jq -r '.created_at')
            OLDEST_ALLOWED_TIMESTAMP=$(date -d '24 hours ago' --rfc-3339=seconds)

            if [ "$CREATED_AT" \< "$OLDEST_ALLOWED_TIMESTAMP" ]; then
              echo "Delivery ID $DELIVERY_ID is older than 24 hours. Skipping further process."
              continue
            fi
            echo "Delivery ID $DELIVERY_ID is not older than 24 hours"
            ADDED_USER=$(echo "$PAYLOAD" | jq -r '.request.payload.membership.user.login')
            HTML_URL=$(echo "$PAYLOAD" | jq -r '.request.payload.membership.user.html_url')
            ALERT_NUMBER=$(echo "$PAYLOAD" | jq -r '.request.payload.alert.number')
            ORG=$(echo "$PAYLOAD" | jq -r '.request.payload.organization.login')
            echo "Current Repository Name: $GITHUB_REPOSITORY"
            BODY="Hi @${ADDED_USER},\n You have been added to a new organization.\n Welcome to ${ORG}."
            echo $ADDED_USER
            echo $HTML_URL
         
            ISSUE_RESPONSE=$(curl -X POST -u "$TOKEN" -d "{\"title\":\"${ACTION}_${ADDED_USER}\",\"body\":\"$BODY\",\"assignees\":[\"$ADDED_USER\"]}" "$BASE_URL/repos/$GITHUB_REPOSITORY/issues")
            echo "GitHub Issue Creation Response: $ISSUE_RESPONSE"
            echo "++++++++++++++++++++++++++++++++++"         
        done    
    - name: Issue Created
      if: success()
      run: echo "GitHub issue created successfully."

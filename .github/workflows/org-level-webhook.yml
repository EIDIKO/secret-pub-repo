name: "Org Level Workflow(secret-pub-repo)"
on:
  push:
    branches: [ "*" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '28 0 * * 1'

jobs:
  monitor-ssa-issues:
    runs-on: ubuntu-latest 
    steps:
      - name: Set up Python 2.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install requests module
        run: pip install requests
      - name: Python Testing
        id: python-teting
        env:
          TOKEN: ${{ secrets.MY_PAT }}   
          REPO_NAME: ${{ github.repository }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          P_NUMBER: ${{ github.event.pull_request.number }}
          TT: ${{ secrets.GITHUB_TOKEN }}
        shell: python        
        run: |
          import base64
          import json
          import os
          import requests
          REPO_NAME = os.environ["REPO_NAME"]
          P_NUMBER = os.environ["P_NUMBER"]
          TOKEN = os.environ["TOKEN"]
          print("Value of REPO_NAME: " + REPO_NAME)
          print("Value of P_NUMBER: " + P_NUMBER)
          print("Value of TOKEN: " + TOKEN)
          url = 'https://api.github.com/repos/EIDIKO/secret-pub-repo/pulls/294/files'
          response = requests.get(url)
          if response.status_code == 200:
            data = response.json()
            # Assuming the response is a list with one dictionary
            filename = data[0].get("filename", "No filename found")
            print('Filename:', filename)
            filename_without_extension = filename.split("/")[-1].split(".")[0]
            print(f"::set-output name=filename::{filename_without_extension}")
            print('filename_without_extension:', filename_without_extension)
          else:
            print('Request failed with status code:', response.status_code)
            filename = "Request failed"        
      - name: Trigger Another Workflow
        env:
          TOKEN: ${{ secrets.MY_PAT }}   
        run: |
          echo "FILENAME: ${{ steps.python-teting.outputs.filename }}"
          curl -X POST \
            -H "Authorization: token ${{ secrets.MY_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/triggered-workflow/dispatches \
            -d '{"ref":"main", "inputs": {"FILENAME": "${{ steps.python-teting.outputs.filename }}"}}'

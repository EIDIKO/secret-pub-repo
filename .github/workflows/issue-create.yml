name: Read Template Pros & Create a Repo

on:
  issues:
    types:
      - opened
jobs:
  read_template_properties:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Read Issue Template Properties
      id: extract-properties
      env:
        HOOK_ID: ${{ vars.HOOK_ID }}
      run: |
        issue_boddy="test"
        issue_body="${{ github.event.issue.body }}"
        property_names=("NAME_OF_REPOSITORY" "PURPOSE_OF_REPOSITORY" "TEAM_OR_INDIVIDUAL_REQUSTIN" "PRIMARY_CONTACT" "REPOSITORY_DESCRIPTION" "ACCESS_AND_PERMISSION" "ACCESS_CONTROL" "BRANCHING_STRATEGY" "COLLABORATORS" "SECURITY_AND_COMPLIANCE" "ADDITIONAL_NOTES")
        TOKEN="${{ secrets.MY_PAT }}"    
        declare -A property_values
        echo "==========================================="
        for property_name in "${property_names[@]}"; do
          echo "++++++++++++++++++++++++++++++++++++++++++"
          property_value=$(echo "$issue_body" | sed -n "/$property_name/,/## / p" | grep -v -E "^\[.*\]$" | sed -e "/$property_name/ s/^.*: *//")
          echo "$property_name"
          extracted_value=$(echo "$property_value" | sed -n 's/.*\[\(.*\)\].*/\1/p' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          echo "$extracted_value"
          if [ "$property_name" == "NAME_OF_REPOSITORY" ]; then
            
            echo "{name}={value}" >> $GITHUB_OUTPUT
            echo "{namee}={value}" >> $GITHUB_OUTPUT
            echo "RNAME ${{ steps.extract-properties.outputs.name }}"
            echo "RNAME ${{ steps.extract-properties.outputs.namee }}"
          fi
          
          echo "++++++++++++++++++++++++++++++++++++++++++"
        done
    - name: Create Repository
      env:
        HOOK_ID: ${{ vars.HOOK_ID }}        
      run: |
        TOKEN="${{ secrets.MY_PAT }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        REPO_NAME="your-repo-name"
        GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          
        curl -s -X POST \
          -u "$TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/orgs/$ORG_OR_OWNER/repos \
          -d '{
            "name": "'$REPO_NAME'",
            "description": "Your repository description",
            "private": false,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "auto_init": true,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "delete_branch_on_merge": false
          }'
            
    - name: Add Collaborator
      run: |
        TOKEN="${{ secrets.MY_PAT }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        REPO_NAME="your-repo-name"
        USERNAME_OR_TEAM="tirapa-kellogs"
        PERMISSION="push"  # Change to the desired permission level
        GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          
        curl -s -X PUT \
          -u "$TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$ORG_OR_OWNER/$REPO_NAME/collaborators/$USERNAME_OR_TEAM \
          -d '{
            "permission": "'$PERMISSION'"
          }'
    - name: Comment on Issue
      run: |
        TOKEN="${{ secrets.MY_PAT }}"
        REPO_NAME="${{ github.repository }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        ISSUE_NUMBER="${{ github.event.issue.number }}"
        COMMENT_BODY="Thank you for opening this issue! Your feedback is valuable to us."
        echo $REPO_NAME
        echo $ORG_OR_OWNER
        echo $ISSUE_NUMBER
        curl -X POST \
          -u "$TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$REPO_NAME/issues/$ISSUE_NUMBER/comments" \
          -d '{
            "body": "'"$COMMENT_BODY"'"
          }'        
    - name: Close Issue
      run: |
        TOKEN="${{ secrets.MY_PAT }}"
        ORG_OR_OWNER="${{ github.repository_owner }}"
        REPO_NAME="${{ github.repository }}"
        ISSUE_NUMBER="${{ github.event.issue.number }}"
        curl -X PATCH \
          -u "$TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$REPO_NAME/issues/$ISSUE_NUMBER" \
          -d '{
            "state": "closed"
          }'
